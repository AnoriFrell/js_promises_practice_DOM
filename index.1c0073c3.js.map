{"mappings":"ACEA,SAAS,EAAmB,CAAI,CAAE,CAAS,EACzC,IAAM,EAAe,SAAS,aAAa,CAAC,OAE5C,EAAa,YAAY,CAAC,UAAW,gBACrC,EAAa,SAAS,CAAC,GAAG,CAAC,EAAY,UAAY,WACnD,EAAa,WAAW,CAAG,EAC3B,SAAS,IAAI,CAAC,WAAW,CAAC,EAC5B,CAYA,AAVqB,IAAI,QAAQ,SAAC,CAAA,CAAS,CAA3C,EACE,SAAS,gBAAgB,CAAC,QAAS,WACjC,EAAQ,6BACV,GAEA,WAAW,WACT,EAAO,AAAI,MAAM,8BACnB,EAAG,IACL,GAGG,IAAI,CAAC,SAAC,CADT,EAEI,EAAmB,EAAQ,CAAA,EAC7B,GACC,KAAK,CAAC,SAAC,CADR,EAEE,EAAmB,EAAO,CAAA,EAC5B,GAUF,AARsB,IAAI,QAAQ,SAAC,CAAnC,EACE,SAAS,gBAAgB,CAAC,YAAa,SAAC,CAAxC,EACM,CAAA,AAAiB,IAAjB,EAAM,MAAM,EAAU,AAAiB,IAAjB,EAAM,MAAM,AAAK,GACzC,EAAQ,8BAEZ,EACF,GAEc,IAAI,CAAC,SAAC,CAApB,EACE,EAAmB,EAAQ,CAAA,EAC7B,GA0BA,AAxBqB,IAAI,QAAQ,SAAC,CAAlC,EACE,IAAI,EAAoB,CAAA,EACpB,EAAqB,CAAA,EAEzB,SAAS,gBAAgB,CAAC,YAAa,SAAC,CAAxC,EACE,OAAQ,EAAM,MAAM,EAClB,KAAK,EACH,EAAoB,CAAA,EACpB,KAEF,MAAK,EACH,EAAqB,CAAA,CAKzB,CAEI,GAAqB,GACvB,EAAQ,6BAEZ,EACF,GAEa,IAAI,CAAC,SAAC,CAAnB,EACE,EAAmB,EAAQ,CAAA,EAC7B,GAEA,SAAS,gBAAgB,CAAC,cAAe,SAAC,CAA1C,EACE,EAAE,cAAc,EAClB","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction createNotification(noti, isSuccess) {\n    var notification = document.createElement(\"div\");\n    notification.setAttribute(\"data-qa\", \"notification\");\n    notification.classList.add(isSuccess ? \"success\" : \"warning\");\n    notification.textContent = noti;\n    document.body.appendChild(notification);\n}\nvar firstPromise = new Promise(function(resolve, reject) {\n    document.addEventListener(\"click\", function() {\n        resolve(\"First promise was resolved\");\n    });\n    setTimeout(function() {\n        reject(new Error(\"First promise was rejected\"));\n    }, 3000);\n});\nfirstPromise.then(function(result) {\n    createNotification(result, true);\n}).catch(function(error) {\n    createNotification(error, false);\n});\nvar secondPromise = new Promise(function(resolve) {\n    document.addEventListener(\"mousedown\", function(mouse) {\n        if (mouse.button === 0 || mouse.button === 2) resolve(\"Second promise was resolved\");\n    });\n});\nsecondPromise.then(function(result) {\n    createNotification(result, true);\n});\nvar thirdPromise = new Promise(function(resolve) {\n    var leftButtonPressed = false;\n    var rightButtonPressed = false;\n    document.addEventListener(\"mousedown\", function(mouse) {\n        switch(mouse.button){\n            case 0:\n                leftButtonPressed = true;\n                break;\n            case 2:\n                rightButtonPressed = true;\n                break;\n            default:\n                break;\n        }\n        if (leftButtonPressed && rightButtonPressed) resolve(\"Third promise was resolved\");\n    });\n});\nthirdPromise.then(function(result) {\n    createNotification(result, true);\n});\ndocument.addEventListener(\"contextmenu\", function(e) {\n    e.preventDefault();\n});\n\n//# sourceMappingURL=index.1c0073c3.js.map\n","'use strict';\n\nfunction createNotification(noti, isSuccess) {\n  const notification = document.createElement('div');\n\n  notification.setAttribute('data-qa', 'notification');\n  notification.classList.add(isSuccess ? 'success' : 'warning');\n  notification.textContent = noti;\n  document.body.appendChild(notification);\n}\n\nconst firstPromise = new Promise((resolve, reject) => {\n  document.addEventListener('click', () => {\n    resolve('First promise was resolved');\n  });\n\n  setTimeout(() => {\n    reject(new Error('First promise was rejected'));\n  }, 3000);\n});\n\nfirstPromise\n  .then((result) => {\n    createNotification(result, true);\n  })\n  .catch((error) => {\n    createNotification(error, false);\n  });\n\nconst secondPromise = new Promise((resolve) => {\n  document.addEventListener('mousedown', (mouse) => {\n    if (mouse.button === 0 || mouse.button === 2) {\n      resolve('Second promise was resolved');\n    }\n  });\n});\n\nsecondPromise.then((result) => {\n  createNotification(result, true);\n});\n\nconst thirdPromise = new Promise((resolve) => {\n  let leftButtonPressed = false;\n  let rightButtonPressed = false;\n\n  document.addEventListener('mousedown', (mouse) => {\n    switch (mouse.button) {\n      case 0:\n        leftButtonPressed = true;\n        break;\n\n      case 2:\n        rightButtonPressed = true;\n        break;\n\n      default:\n        break;\n    }\n\n    if (leftButtonPressed && rightButtonPressed) {\n      resolve('Third promise was resolved');\n    }\n  });\n});\n\nthirdPromise.then((result) => {\n  createNotification(result, true);\n});\n\ndocument.addEventListener('contextmenu', (e) => {\n  e.preventDefault();\n});\n"],"names":["createNotification","noti","isSuccess","notification","document","createElement","setAttribute","classList","add","textContent","body","appendChild","firstPromise","Promise","resolve","reject","addEventListener","setTimeout","Error","then","result","catch","error","secondPromise","mouse","button","thirdPromise","leftButtonPressed","rightButtonPressed","e","preventDefault"],"version":3,"file":"index.1c0073c3.js.map"}